@model ProjetoColaborativo.Business.Usuario.ViewModels.UsuarioViewModel

@{
    ViewBag.Title = "Usuário";
}

<h2>Usuário</h2>


@using (Html.BeginForm("Create", "Usuario", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*@Html.ValidationSummary(true, "", new { @class = "alert alert-danger", role = "alert" })*@

        @Html.HiddenFor(model => model.Handle)

        <div class="form-group">
            @Html.LabelFor(model => model.Nome)
            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control required" } })
            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Login)
            @Html.EditorFor(model => model.Login, new {htmlAttributes = new {@class = "form-control required"}})
            @Html.ValidationMessageFor(model => model.Login, "", new {@class = "text-danger"})
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Senha)
            @Html.EditorFor(model => model.Senha, new {htmlAttributes = new {@class = "form-control required"}})
            @Html.ValidationMessageFor(model => model.Senha, "", new {@class = "text-danger"})
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cpf)
            @Html.EditorFor(model => model.Cpf, new { htmlAttributes = new { @class = "form-control required" } })
            @Html.ValidationMessageFor(model => model.Cpf, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email)
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control required" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Foto)
            @if (!string.IsNullOrEmpty(Model.Foto))
            {
                <div>
                    <img src="@Model.Foto" width="50px" />
                </div>
            }
            @Html.TextBoxFor(m => m.Foto, new {type = "file", @class = "form-control required"})
            @Html.ValidationMessageFor(model => model.Foto, "", new {@class = "text-danger"})
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cor)
            @Html.EditorFor(model => model.Cor, new { htmlAttributes = new { @class = "form-control required" } })
            @Html.ValidationMessageFor(model => model.Cor, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <input type="submit" value="Salvar" class="btn btn-primary" />
            @Html.ActionLink("Voltar", "Index", null, new { @class = "btn btn-default" })
        </div>
    </div>
}

@section scripts
{
    <script type="text/javascript" src="/Scripts/colorpicker.js"></script>
    <script>
        $(function() {
            $('#Cor').ColorPicker({
                onSubmit: function (hsb, hex, rgb, el) {
                    $(el).val(hex);
                    $(el).ColorPickerHide();
                },
                onBeforeShow: function () {
                    $(this).ColorPickerSetColor(this.value);
                }
            })
            .bind('keyup', function () {
                $(this).ColorPickerSetColor(this.value);
            });
        });
    </script>
}

@section styles
{
    <link rel="stylesheet" media="screen" type="text/css" href="/Content/colorpicker.css" />
}
