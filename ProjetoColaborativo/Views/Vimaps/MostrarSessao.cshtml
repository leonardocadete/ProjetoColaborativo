@using System
@using System.Linq
@model ProjetoColaborativo.Models.Entidades.SessaoColaborativa
@{
    Layout = null;
    ViewBag.Title = "ShowSession";
}

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
    <link href='https://fonts.googleapis.com/css?family=Dosis' rel='stylesheet' type='text/css'>
    <link href="/Content/paineis.css" rel="stylesheet"/>
</head>
<body>


@if (Model.ObjetosDaSessao.Count > 0)
{
    <canvas id="draw-canvas"></canvas>

    <div id="left-panel">
        <div class="bg-overlay"></div>
        <div class="panel-trigger"></div>
        <div class="panel-content">

            <input type="button" value="" class="btn btn-default button-toolbar icon-rect">
            <input type="button" value="" class="btn btn-default button-toolbar icon-elipse">
            <input type="button" value="" class="btn btn-default button-toolbar icon-pencil">
            <input type="button" value="" class="btn btn-default button-toolbar icon-text">
            <input type="button" value="" class="btn btn-default button-toolbar icon-pin">
            <input type="button" value="" class="btn btn-default button-toolbar icon-youtube">
            <input type="button" value="" class="btn btn-default button-toolbar icon-speaker">
        </div>
    </div>

    <div id="right-panel">
        <div class="bg-overlay"></div>
        <div class="panel-trigger"></div>
        <div class="panel-content">

            <input type="button" value="" class="btn btn-default button-toolbar icon-rect">
            <input type="button" value="" class="btn btn-default button-toolbar icon-elipse">
            <input type="button" value="" class="btn btn-default button-toolbar icon-pencil">
            <input type="button" value="" class="btn btn-default button-toolbar icon-text">
            <input type="button" value="" class="btn btn-default button-toolbar icon-pin">
            <input type="button" value="" class="btn btn-default button-toolbar icon-youtube">
            <input type="button" value="" class="btn btn-default button-toolbar icon-speaker">
        </div>
    </div>


    <div class="toolbar">
        <div class="drag window-title">Ferramentas</div>
        <div class="tools">
            <div class="bg"></div>
            <input type="button" value="" class="btn btn-default button-toolbar icon-rect"/>
            <input type="button" value="" class="btn btn-default button-toolbar icon-elipse"/>
            <input type="button" value="" class="btn btn-default button-toolbar icon-pencil"/>
            <input type="button" value="" class="btn btn-default button-toolbar icon-text"/>
            <input type="button" value="" class="btn btn-default button-toolbar icon-pin"/>
            <input type="button" value="" class="btn btn-default button-toolbar icon-youtube"/>
            <input type="button" value="" class="btn btn-default button-toolbar icon-speaker"/>
            <div class="clear"></div>
        </div>
    </div>

    <div id="bottom-panel" class="toggle-panel">
        <div class="window-title">
            Objetos da sessão
            <a class="troggle-minimize">▾</a>
        </div>
        <div class="panel-content">
            <div class="bg-overlay"></div>
            <div class="miniaturas">
                @if (Model.ObjetosDaSessao.Count > 0)
                {
                    <ul id="sortable">

                        @foreach (var os in @Model.ObjetosDaSessao.OrderBy(x => x.Ordem))
                        {
                            <li data-id="@os.Handle" data-url="@Url.Action("MostrarSessao", "Vimaps", new {id = @Model.Handle, objetoid = os.Handle})" class="miniatura @(ViewBag.ObjectId == os.Handle ? "selecionado" : "")">
                                <img src="@string.Format("{0}?{1}", os.UrlMiniatura, DateTime.Now.Ticks)"/>
                            </li>
                        }

                    </ul>
                }
                else
                {
                    <div> Esta sessão ainda não possui nenhum objeto. Para adicionar objetos, acesso o Vimaps. </div>
                }
            </div>

        </div>
    </div>

}
else
{
    <div class="sem-objetos">
        Esta sessão ainda não possui nenhum objeto. Para adicionar objetos, acesso o Vimaps.
        <br/>@Html.ActionLink("Escolher outra sessão", "EscolherSessao")
    </div>
}


    <script src="/Scripts/jquery-1.10.2.min.js"></script>
    <script src="/Scripts/jquery-ui.min.js"></script>
    <script src="/Scripts/uuid.js"></script>
    <script src="/Scripts/fabric.min.js"></script>
    <script src="/Scripts/paineis.js"></script>
    <script>

        $("#left-panel .panel-trigger").on("mouseenter", function () {
            $(this).parent().animate({ left: 0 }, 100);
        });

        $("#left-panel").on("mouseleave", function () {
            $(this).animate({ left: -42 }, 100);
        });

        //$("#right-panel .panel-trigger").on("mouseenter", function() {
        //    $(this).parent().animate({ right: 0 }, 100);
        //});

        //$("#right-panel").on("mouseleave", function() {
        //    $(this).animate({ right: -42 }, 100);
        //});

        $(".troggle-minimize").on("click", function () {
            var p = $(this).closest(".toggle-panel");
            var t = $(this).closest(".window-title");

            if ($(this).html() != "▴") {
                $(this).html("▴");
                p.animate({ bottom: (p.height() * -1) + t.height() + 5 }, 100);
            } else {
                $(this).html("▾");
                p.animate({ bottom: 0 }, 100);
            }
        });

        
        (function () {

            @if (ViewBag.ObjectId != null)
            {
                <text>
                setCanvasBackground('@Model.ObjetosDaSessao.FirstOrDefault(x => x.Handle == ViewBag.ObjectId).UrlImagem');
                </text>
            }

        $("#left-panel").delay(1000).animate({ left: $("#left-panel").width() * -1 + 20 });

        $(".toolbar").draggable({ handle: ".drag" });

        $("#sortable").sortable({
            axis: 'x',
            cursor: 'move',
            update: function(event, ui) {
                var id = ui.item.attr("data-id");
                var idanterior = ui.item.prev().attr("data-id") || "0";

                $.ajax({
                    type: "POST",
                    url: window.location.pathname.replace("MostrarSessao", "OrdenarObjeto"),
                    data: "{ 'idreordenar' : '" + id + "', 'idanterior' : '" + idanterior + "'}",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) { console.log(data) },
                    failure: function (errMsg) {
                        alert(errMsg);
                    }
                });

            }
        });

        $("#sortable").disableSelection();

        $(".miniatura").on("click", function () {
            window.location.href = $(this).attr("data-url");
            //$(".miniatura").removeClass("selecionado");
            //$(this).addClass("selecionado");
        });

    })();

    var dono = "@Html.Raw(ViewBag.Dono)";
    var cordono = "#@Html.Raw(ViewBag.CorDono)";

    @if (ViewBag.LerElementos != null)
    {
        <text>
        var json = @Html.Raw(ViewBag.LerElementos);
        canvas1.loadFromJSON(json, canvas1.renderAll.bind(canvas1), function (o, object) {
            if (object.iddono != dono) {
                //object.lockMovementX = object.lockMovementY = true;
                //object.lockScalingX = object.lockScalingY = true;
                //object.lockRotation = true;
                object.selectable = false;
            }
        });
        </text>
    }




        window.setInterval(function() {
            $.getJSON( window.location.pathname.replace("MostrarSessao", "BuscarElementosDosOutrosParticipantesJson"), function( data ) {
                
                canvas1.forEachObject(function(d){
                    if (d.iddono != dono) {
                        d.naosalvar = true;
                        d.remove();
                    }
                });

                fabric.util.enlivenObjects(data.objects, function(objects) {
                    var origRenderOnAddRemove = canvas1.renderOnAddRemove;
                    canvas1.renderOnAddRemove = false;
                    objects.forEach(function(o) {
                        o.naosalvar = true;
                        o.selectable = false;
                        canvas1.add(o);
                    });
                    canvas1.renderOnAddRemove = origRenderOnAddRemove;
                    canvas1.renderAll();
                    
                    atualizarMiniatura(false);
                });
            });

        }, 3000);


    </script>

</body>
</html>



